{%  extends 'baseBack.html.twig' %}


{% block title %} EnergyBox | Matériaux {% endblock %}

{% block body %}
<div class="map-data m-b-40">
    <h3 class="title-3 m-b-30">
        <i class="fas fa-table"></i>Gestion Matériaux</h3>

    <div class="table-responsive m-b-40">
        <div class="table-data__tool">
            <div class="table-data__tool-left">
                <div class="rs-select2--light rs-select2--md">
                    <select class="js-select2" name="property">
                        <option selected="selected">Trier Par</option>
                        <option value="">Date</option>
                        <option value="">Cours</option>
                        <option value="">Jour</option>
                        <option value="">Heure Début</option>
                    </select>
                    <div class="dropDownSelect2"></div>
                </div>
                <button class="au-btn-filter"><i class="zmdi zmdi-filter-list"></i>filters</button>
            </div>
            <div class="table-data__tool-right">
                <a href="{{ path('app_materiel_new') }}">
                    <button class="au-btn au-btn-icon au-btn--green au-btn--small">
                        <i class="zmdi zmdi-plus"></i>
                        Ajouter Matériel
                    </button>
                    &nbsp;
                </a>
            </div>
        </div>
    </div>
                                            
        {#//recherche #}
            <div class="container-fluid" style="display:flex;justify-content:flex-end;align-items:flex-end;">
                <div class="header-wrap">
                    <form class="form-header" action="" method="GET">
                        <input type="text" class="au-input au-input--xl" id="searchInput" placeholder="Search&hellip;">
                        <button class="au-btn--submit" type="submit">
                            <i class="zmdi zmdi-search"></i>
                        </button>
                    </form>
                </div>
            </div>
            <br>            
            <table class="table table-borderless table-data3">
                <thead>
                    <tr>
                        <td style="color: white;"><strong style="margin-left:30px">Nom</strong></td>
                        <td style="color: white;"><strong style="margin-left:30px">Réference</strong></td>
                        <td style="color: white;"><strong style="margin-left:30px">Maintenance</strong></td>
                        <td style="color: white;"><strong style="margin-left:30px">Quantité</strong></td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    {% for materiel in materiels %}
                        <tr>
                            <td>{{ materiel.nomMateriel }}</td>
                            <td>{{ materiel.referenceMateriel }}</td>
                            <td>{{ materiel.dateMaintenanceMateriel ? materiel.dateMaintenanceMateriel|date('Y-m-d') : '' }}</td>
                            <td>{% if materiel.quantiteMateriel == 0 %}0{% else %} {{ materiel.quantiteMateriel }} {% endif %}</td>
                            <td>
                                <a href="{{ path('app_materiel_show', {'id': materiel.id}) }}">
                                    <button class="item" data-toggle="tooltip" data-placement="top" title="" data-original-title="Afficher">
                                        <i class="zmdi zmdi-eye"></i>                               
                                    </button>
                                </a>
                                &nbsp;&nbsp;
                                <a href="{{ path('app_materiel_edit', {'id': materiel.id}) }}">
                                    <button class="item" data-toggle="tooltip" data-placement="top" title="" data-original-title="Modifier">
                                        <i class="zmdi zmdi-edit"></i>                          
                                    </button>
                                </a>
                                {{ include('materiel/_delete_form.html.twig') }}
                            </td>
                            
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="6">Pas de matériaux.</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
            <br><br><br>    
        <canvas id="myChart" style="width:100%;max-width:600px;text-align: center"></canvas>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>

<script>
            var xValues = [];
            var yValues = [];
            {% for materiel in materiels %}
            xValues.push("{{ materiel.nomMateriel }}");
            yValues.push("{{ materiel.quantiteMateriel }}");
            {% endfor %}
            new Chart("myChart", {
                type: "bar",
                data: {
                    labels: xValues,
                    datasets: [{
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                                ],
                                borderWidth: 2,
                                data: yValues,
                                }]
                                },
                                options: {
                                    legend: {display: false},
                                    title: {
                                        display: true,
                                        text: "Quantités des matériels",
                                        fontColor: 'rgba(120,10,10,1.8)', // sets font color for y-axis labels
                                        },
                                        animation: {
                                            duration: 5000,
                                            easing: 'easeOutBounce' // add a bouncing effect at the end of the animation
                                            },
                                            scales: {
                                                yAxes: [{
                                                    ticks: {
                                                        beginAtZero: true,
                                                        fontColor: 'rgba(120,10,10,1.8)', // sets font color for y-axis labels
                                                        fontSize: 14 // sets font size for y-axis labels
                                                        }
                                                        }],
                                                        xAxes: [{
                                                            ticks: {
                                                                fontColor: 'rgba(120,10,10,1.8)', // sets font color for x-axis labels
                                                                fontSize: 14 // sets font size for x-axis labels
                                                            }
                                                        }]
                                                    }
                                                }
                                            });
</script>

                                        



<script>
                                                function filterTable() {
                                                    const filter = document.getElementById('searchInput').value.toUpperCase();
                                                    const rows = document.querySelectorAll('table tr');
                                                    for (let i = 1; i < rows.length; i++) {
                                                        const cols = rows[i].querySelectorAll('td');
                                                        let visible = false;
                                                        for (let j = 0; j < cols.length; j++) {
                                                            const cell = cols[j];
                                                            if (cell.innerText.toUpperCase().indexOf(filter) > -1) {
                                                                visible = true;
                                                                break;
                                                            }
                                                        }
                                                        rows[i].style.display = visible ? '' : 'none';
                                                    }
                                                }
                                                document.getElementById('searchInput').addEventListener('keyup', filterTable);
</script>


{% endblock %}
